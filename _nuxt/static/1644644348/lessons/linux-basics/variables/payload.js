__NUXT_JSONP__("/lessons/linux-basics/variables", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au){return {data:[{content:{slug:"variables",layout:"lesson",module:J,title:P,desc:"For configuration and more \u003E:)",order:4,toc:[{id:ad,depth:Q,text:ae},{id:af,depth:Q,text:P},{id:ag,depth:Q,text:ah}],body:{type:"root",children:[{type:b,tag:g,props:{},children:[{type:a,value:"Variables are containers of information used to store values for future use, and should be a familiar concept to those with programming experience.\nLinux shells and even the operating systems also implement their own type of variables."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"These are generally split into two categories, "},{type:b,tag:p,props:{},children:[{type:a,value:ai}]},{type:a,value:" and "},{type:b,tag:p,props:{},children:[{type:a,value:aj}]},{type:a,value:K}]},{type:a,value:e},{type:b,tag:R,props:{id:ad},children:[{type:b,tag:S,props:{ariaHidden:T,href:"#shell-variables",tabIndex:U},children:[{type:b,tag:c,props:{className:[V,W]},children:[]}]},{type:a,value:ae}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"To refresh, the "},{type:b,tag:p,props:{},children:[{type:a,value:"shell"}]},{type:a,value:" is the program which allows u to type commands to run programs and perform simple operations. So far, the shell that we have been using in this module is "},{type:b,tag:E,props:{},children:[{type:a,value:B}]},{type:a,value:K}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Shell variables are considered "},{type:b,tag:E,props:{},children:[{type:a,value:"local"}]},{type:a,value:" variables, and only affect and exist in the current session of the shell being used. If you restart the shell, or start a new session separately, the variables previously defined will not exist anymore."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Setting shell variables is very straightforward, simply use the following syntax:"}]},{type:a,value:e},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,x]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,y,i]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:z}]},{type:a,value:"VARIABLE_VALUE\n"}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"You may optionally wrap the "},{type:b,tag:f,props:{},children:[{type:a,value:"VARIABLE_VALUE"}]},{type:a,value:" in quotes as well, which is useful when your value has characters that may be interpreted by the shell, like spaces or semicolons."}]},{type:a,value:e},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,x]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,y,i]},children:[{type:a,value:ak}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\"VARIABLE VALUE\""}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"After you've defined the variable, you can simply reference it in the commandline with the syntax "},{type:b,tag:f,props:{},children:[{type:a,value:"$VARIABLE_NAME"}]},{type:a,value:" (note the "},{type:b,tag:f,props:{},children:[{type:a,value:"$"}]},{type:a,value:" prefix).\nHere is an example usage of variables:"}]},{type:a,value:e},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,F]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"$ LESSON=\"Linux Basics\"\n$ echo \"I am working on the $LESSON lesson!\"\nI am working on the Linux Basics lesson!\n"}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"To observe the that these variables only exist in the current session, we can try to start a new bash session and notice what happens to our previously defined variables!"}]},{type:a,value:e},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,x]},children:[{type:b,tag:f,props:{},children:[{type:a,value:G},{type:b,tag:c,props:{className:[d,y,i]},children:[{type:a,value:"VAR_EXISTS"}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\"Hi I exist!\""}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,q,r]},children:[{type:a,value:v}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:X}]},{type:a,value:"\nHi I exist"},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:Y}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,Z]},children:[{type:a,value:"# Start a new sesson of our shell (bash)"}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:B}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,q,r]},children:[{type:a,value:v}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:X}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,Z]},children:[{type:a,value:al}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Notice that the second time we try to "},{type:b,tag:f,props:{},children:[{type:a,value:v}]},{type:a,value:" the value of "},{type:b,tag:f,props:{},children:[{type:a,value:X}]},{type:a,value:", we get an empty output? That's because the local "},{type:b,tag:p,props:{},children:[{type:a,value:ai}]},{type:a,value:" we've defined this way do not carry over to a new shell session we start with "},{type:b,tag:f,props:{},children:[{type:a,value:B}]},{type:a,value:". In fact, any other program that we start will "},{type:b,tag:E,props:{},children:[{type:a,value:_}]},{type:a,value:" have access to this variable."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"So what if we do want these variables to propagate to other programs that we start? That's where "},{type:b,tag:p,props:{},children:[{type:a,value:aj}]},{type:a,value:" come in!"}]},{type:a,value:e},{type:b,tag:R,props:{id:af},children:[{type:b,tag:S,props:{ariaHidden:T,href:"#environment-variables",tabIndex:U},children:[{type:b,tag:c,props:{className:[V,W]},children:[]}]},{type:a,value:P}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"As we've established, setting local shell variables does not make them environment variables, thus other programs being run will not have these variables passed to them. We can test this by using the "},{type:b,tag:f,props:{},children:[{type:a,value:$}]},{type:a,value:" command that lists environment variables!"}]},{type:a,value:e},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,x]},children:[{type:b,tag:f,props:{},children:[{type:a,value:G},{type:b,tag:c,props:{className:[d,y,i]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:am}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:$}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:an}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:ao}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:ap}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,Z]},children:[{type:a,value:al}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"As you can see the "},{type:b,tag:f,props:{},children:[{type:a,value:I}]},{type:a,value:" shell variable is not yet an environment variable.\nTo set it as an environment variable simply use the "},{type:b,tag:f,props:{},children:[{type:a,value:M}]},{type:a,value:" command with the following syntax:"}]},{type:a,value:e},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,F]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"export \u003CVARIABLE_NAME\u003E\n"}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"We can now redo the previous example, but now exporting the "},{type:b,tag:f,props:{},children:[{type:a,value:I}]},{type:a,value:" variable as an "},{type:b,tag:p,props:{},children:[{type:a,value:"environment"}]},{type:a,value:" variable too."}]},{type:a,value:e},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,x]},children:[{type:b,tag:f,props:{},children:[{type:a,value:G},{type:b,tag:c,props:{className:[d,y,i]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:am}]},{type:a,value:H},{type:b,tag:c,props:{className:[d,q,r]},children:[{type:a,value:M}]},{type:a,value:" HELLO\n$ "},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:$}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:an}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:ao}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:ap}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,y,i]},children:[{type:a,value:I}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:z}]},{type:a,value:"Hi there"},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:Y}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Now we see it listed as an environment variable!\nWe can now test whether it will be transferred to other programs that we run from this session."}]},{type:a,value:e},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,F]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"$ HELLO=\"Hi there!\"\n$ export HELLO\n\n$ bash\n$ echo $HELLO\nHi there!\n"}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"It works!"}]},{type:a,value:e},{type:b,tag:"quiz",props:{},children:[{type:a,value:"\n    "},{type:b,tag:"option-quiz",props:{answer:"1",":options":"['Yes', 'No']"},children:[{type:a,value:"\n        I run the following command:\n        "},{type:b,tag:aq,props:{},children:[]},{type:a,value:ar},{type:b,tag:f,props:{style:"margin-left: 1rem;"},children:[{type:a,value:"\n            export OMU=\"Cool!\"\n        "}]},{type:a,value:ar},{type:b,tag:aq,props:{},children:[]},{type:a,value:"\n        Is this variable an environment variable?\n    "}]},{type:a,value:e}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"There is a simpler way of declaring environment variables, and this way is more commonly used."}]},{type:a,value:e},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,F]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"$ export HELLO=\"Hi there!\"\n$ echo $HELLO\nHi there!\n"}]}]}]},{type:a,value:e},{type:b,tag:R,props:{id:ag},children:[{type:b,tag:S,props:{ariaHidden:T,href:"#variable-permanence",tabIndex:U},children:[{type:b,tag:c,props:{className:[V,W]},children:[]}]},{type:a,value:ah}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"However, it is important to understand that even environment variables are "},{type:b,tag:E,props:{},children:[{type:a,value:_}]},{type:a,value:" permanent. If you close the terminal session and start a new one, these environment variables will not exist anymore. This is because environment variables are only propagated to "},{type:b,tag:p,props:{},children:[{type:a,value:as}]},{type:a,value:" processes, i.e. processes that have been spawned by the session you created."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"For example, if you run "},{type:b,tag:f,props:{},children:[{type:a,value:aa}]},{type:a,value:" inside your "},{type:b,tag:f,props:{},children:[{type:a,value:B}]},{type:a,value:" terminal, then the "},{type:b,tag:f,props:{},children:[{type:a,value:aa}]},{type:a,value:" process will be a "},{type:b,tag:E,props:{},children:[{type:a,value:as}]},{type:a,value:" process of your "},{type:b,tag:f,props:{},children:[{type:a,value:B}]},{type:a,value:" process.\nThus the "},{type:b,tag:f,props:{},children:[{type:a,value:aa}]},{type:a,value:" process will inherit the environment variables."}]},{type:a,value:e},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,F]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"bash\n└── ls\n"}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"However, parent processes, or processes run by other means will not inherit the environment variables.\nHere is an example, try to understand the output as it may be confusing (keep track of the sessions!)"}]},{type:a,value:e},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,x]},children:[{type:b,tag:f,props:{},children:[{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:s}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,y,i]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:z}]},{type:a,value:"Alice\n"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:s}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,q,r]},children:[{type:a,value:v}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:O}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:s}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,q,r]},children:[{type:a,value:M}]},{type:a,value:" MY_SESSION\n\n"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:s}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:B}]},{type:a,value:e},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:s}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,q,r]},children:[{type:a,value:v}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:O}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:s}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,y,i]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:z}]},{type:a,value:"Bob\n"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:s}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,q,r]},children:[{type:a,value:v}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:O}]},{type:a,value:"\n    Bob\n"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:s}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,q,r]},children:[{type:a,value:M}]},{type:a,value:" MY_SESSION\n"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:s}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,q,r]},children:[{type:a,value:"exit"}]},{type:a,value:L},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:s}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:t}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,q,r]},children:[{type:a,value:v}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:O}]},{type:a,value:ab}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"In this example, the "},{type:b,tag:p,props:{},children:[{type:a,value:w}]},{type:a,value:" session of bash spawns a child session "},{type:b,tag:p,props:{},children:[{type:a,value:A}]},{type:a,value:", exporting the variable "},{type:b,tag:f,props:{},children:[{type:a,value:N}]},{type:a,value:K}]},{type:a,value:e},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,F]},children:[{type:b,tag:f,props:{},children:[{type:a,value:"bash (A)\n└── bash (B)\n"}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Observe how even though "},{type:b,tag:p,props:{},children:[{type:a,value:A}]},{type:a,value:" exports the newly defined value of "},{type:b,tag:f,props:{},children:[{type:a,value:"MY_SESSION=B"}]},{type:a,value:", when we exit back to the "},{type:b,tag:p,props:{},children:[{type:a,value:w}]},{type:a,value:" session of bash, it does not have this new value of "},{type:b,tag:f,props:{},children:[{type:a,value:N}]},{type:a,value:", and still uses the original value "},{type:b,tag:f,props:{},children:[{type:a,value:w}]},{type:a,value:".\nThis is because the environment variables of the child "},{type:b,tag:p,props:{},children:[{type:a,value:A}]},{type:a,value:" will "},{type:b,tag:E,props:{},children:[{type:a,value:_}]},{type:a,value:" be propagated to the parent "},{type:b,tag:p,props:{},children:[{type:a,value:w}]},{type:a,value:K}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"If you do want your environment variables to be permanent, one common way is to make use of the "},{type:b,tag:f,props:{},children:[{type:a,value:ac}]},{type:a,value:" file (remember that "},{type:b,tag:f,props:{},children:[{type:a,value:"~"}]},{type:a,value:" is a shortcut for the home directory of the current user).\nThe "},{type:b,tag:f,props:{},children:[{type:a,value:ac}]},{type:a,value:" file is a special file that contains many bash commands.\nAt the start of any bash session, these commands will be run before the user is given control.\nThis is thus very useful to set-up user-wide configuration."}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Lets give it a try!"}]},{type:a,value:e},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,x]},children:[{type:b,tag:f,props:{},children:[{type:a,value:G},{type:b,tag:c,props:{className:[d,q,r]},children:[{type:a,value:v}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"'export PERMANENT=\"I exist in every bash session by this user!\"'"}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:"\u003E\u003E"}]},{type:a,value:" ~\u002F.bashrc\n"}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"Now if we start a new session of bash (by closing the terminal and opening it again)"}]},{type:a,value:e},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,x]},children:[{type:b,tag:f,props:{},children:[{type:a,value:G},{type:b,tag:c,props:{className:[d,q,r]},children:[{type:a,value:v}]},{type:a,value:j},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:"$PERMANENT"}]},{type:a,value:"\nI exist "},{type:b,tag:c,props:{className:[d,"keyword"]},children:[{type:a,value:"in"}]},{type:a,value:" every "},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:B}]},{type:a,value:" session by this user"},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:Y}]},{type:a,value:e}]}]}]},{type:a,value:e},{type:b,tag:g,props:{},children:[{type:a,value:"It works!\nThis is a popular way of setting configuration to ease the use of the shell for the user.\nYou can try reading the "},{type:b,tag:f,props:{},children:[{type:a,value:ac}]},{type:a,value:" file, or list some of the environment variables you have with "},{type:b,tag:f,props:{},children:[{type:a,value:"printenv"}]},{type:a,value:".\nTry googling some of these environment variables to see how they are useful for you!"}]},{type:a,value:e},{type:b,tag:"info-box",props:{},children:[{type:a,value:"\nTry checking out some useful variables like \n"},{type:b,tag:f,props:{},children:[{type:a,value:"PATH"}]},{type:a,value:"\n or \n"},{type:b,tag:f,props:{},children:[{type:a,value:"SHELL"}]},{type:a,value:"\n\n\n"}]}]},dir:at,path:"\u002Flessons\u002Flinux-basics\u002Fvariables",extension:".md",createdAt:au,updatedAt:au},module:{slug:"linux-basics",title:J,desc:"Learn the basics of operating a Linux-based operating system (OS) and take your first steps in exploitation in a Linux environment!",diff:"Easy",order:1,toc:[],dir:"\u002Flessons",path:at},prev:{slug:"file-manipulation",module:J,title:"File Manipulation",desc:"Reading and writing files"},next:{slug:"execution",module:J,title:"Execution",desc:"Basic understanding of how programs are executed"},isLesson:true,title:"Environment Variables | Linux Basics",challenges:[]}],fetch:{},mutations:void 0}}("text","element","span","token","\n","code","p","punctuation","variable"," ","div","nuxt-content-highlight","pre","line-numbers","operator","strong","builtin","class-name","(",")"," $ ","echo","A","language-bash","assign-left","=","B","bash","string","function","em","language-text","$ ","\n$ ","HELLO","Linux Basics",".","\n\n","export","MY_SESSION","$MY_SESSION","Environment Variables",2,"h2","a","true",-1,"icon","icon-link","$VAR_EXISTS","!","comment","not","env","ls","\n    Alice\n","~\u002F.bashrc","shell-variables","Shell Variables","environment-variables","variable-permanence","Variable Permanence","shell variables","environment variables","VARIABLE_NAME","# there is no output in the line above ^","\"Hi there!\"","|","grep","\"HELLO\"","br","\n        ","child","\u002Flessons\u002Flinux-basics","2022-02-12T05:37:08.075Z")));