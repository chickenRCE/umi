__NUXT_JSONP__("/lessons/linux-basics/file-manipulation", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$){return {data:[{content:{slug:"file-manipulation",layout:"lesson",module:B,title:"File Manipulation",desc:"Reading and writing files",order:3,toc:[{id:l,depth:n,text:l},{id:u,depth:n,text:u},{id:J,depth:n,text:K},{id:v,depth:n,text:v},{id:z,depth:n,text:z},{id:L,depth:n,text:M},{id:w,depth:n,text:w},{id:N,depth:n,text:O},{id:P,depth:n,text:Q}],body:{type:"root",children:[{type:b,tag:e,props:{},children:[{type:a,value:"After knowing how to navigate through the file system, it is time to learn how to read from and write to files."}]},{type:a,value:d},{type:b,tag:o,props:{id:l},children:[{type:b,tag:m,props:{href:"#echo",ariaHidden:p,tabIndex:q},children:[{type:b,tag:r,props:{className:[s,t]},children:[]}]},{type:a,value:l}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"The simplest way to write to a file is to use "},{type:b,tag:c,props:{},children:[{type:a,value:l}]},{type:a,value:". As the name suggests, "},{type:b,tag:c,props:{},children:[{type:a,value:l}]},{type:a,value:" will echo any input it received as output on the terminal."}]},{type:a,value:d},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:c,props:{},children:[{type:a,value:"$ echo Hello World!\nHello World!\n"}]}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"Now to write this to a file we can make use of the "},{type:b,tag:c,props:{},children:[{type:a,value:x}]},{type:a,value:" operator, which is a form of "},{type:b,tag:k,props:{},children:[{type:a,value:"redirection"}]},{type:a,value:" operator in bash. This operator takes the "},{type:b,tag:k,props:{},children:[{type:a,value:R}]},{type:a,value:" of the command on the left-hand side (LHS), and redirects it into the "},{type:b,tag:k,props:{},children:[{type:a,value:"filename"}]},{type:a,value:" provided on the right-hand (RHS) side of the "},{type:b,tag:c,props:{},children:[{type:a,value:x}]},{type:a,value:". Since the output of "},{type:b,tag:c,props:{},children:[{type:a,value:l}]},{type:a,value:" is whatever arguments we provide to it, the following command can be used to write a simple string to a file."}]},{type:a,value:d},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:c,props:{},children:[{type:a,value:"$ echo Hello World! \u003E hello_world\n"}]}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"The command above would write the string "},{type:b,tag:c,props:{},children:[{type:a,value:C}]},{type:a,value:" into the file "},{type:b,tag:c,props:{},children:[{type:a,value:D}]},{type:a,value:" in the current directory."}]},{type:a,value:d},{type:b,tag:o,props:{id:u},children:[{type:b,tag:m,props:{href:"#cat",ariaHidden:p,tabIndex:q},children:[{type:b,tag:r,props:{className:[s,t]},children:[]}]},{type:a,value:u}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"To check the contents of "},{type:b,tag:c,props:{},children:[{type:a,value:D}]},{type:a,value:", we can use the "},{type:b,tag:c,props:{},children:[{type:a,value:u}]},{type:a,value:" command."}]},{type:a,value:d},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:c,props:{},children:[{type:a,value:"$ cat hello_world\nHello World!\n"}]}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"Here, we confirmed that "},{type:b,tag:c,props:{},children:[{type:a,value:C}]},{type:a,value:" is stored inside "},{type:b,tag:c,props:{},children:[{type:a,value:D}]},{type:a,value:y}]},{type:a,value:d},{type:b,tag:o,props:{id:J},children:[{type:b,tag:m,props:{href:"#-vs-",ariaHidden:p,tabIndex:q},children:[{type:b,tag:r,props:{className:[s,t]},children:[]}]},{type:a,value:K}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"Earlier, we tried using "},{type:b,tag:c,props:{},children:[{type:a,value:x}]},{type:a,value:" to redirect the output of "},{type:b,tag:c,props:{},children:[{type:a,value:l}]},{type:a,value:" into a file. Try doing it again, but with a different input string to "},{type:b,tag:c,props:{},children:[{type:a,value:l}]},{type:a,value:y}]},{type:a,value:d},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:c,props:{},children:[{type:a,value:"$ echo New Input! \u003E hello_world\n\n$ cat hello_world\nNew Input!\n"}]}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"Notice that "},{type:b,tag:c,props:{},children:[{type:a,value:C}]},{type:a,value:" is no longer in the file, and has been replaced by "},{type:b,tag:c,props:{},children:[{type:a,value:"New Input!"}]},{type:a,value:".\nThis occurs because the "},{type:b,tag:c,props:{},children:[{type:a,value:x}]},{type:a,value:" will overwrite any existing contents of the target file.\nIf we want to apppend to the file instead of completely overwriting what was inside, we can use the "},{type:b,tag:c,props:{},children:[{type:a,value:S}]},{type:a,value:" operator."}]},{type:a,value:d},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:c,props:{},children:[{type:a,value:"$ echo More Hellos! \u003E\u003E hello_world\n\n$ cat hello_world\nNew Input!\nMore Hellos!\n"}]}]}]},{type:a,value:d},{type:b,tag:T,props:{},children:[{type:a,value:A},{type:b,tag:U,props:{answer:"4",":options":"['\u003C', '\u003E', '\u003C\u003C', '\u003E\u003E']"},children:[{type:a,value:"\n        To append a file "},{type:b,tag:k,props:{},children:[{type:a,value:"without"}]},{type:a,value:" overwriting its contents, which redirection operator should we use?\n    "}]},{type:a,value:d}]},{type:a,value:d},{type:b,tag:o,props:{id:v},children:[{type:b,tag:m,props:{href:"#nano",ariaHidden:p,tabIndex:q},children:[{type:b,tag:r,props:{className:[s,t]},children:[]}]},{type:a,value:v}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"Using "},{type:b,tag:c,props:{},children:[{type:a,value:l}]},{type:a,value:" with "},{type:b,tag:c,props:{},children:[{type:a,value:x}]},{type:a,value:" does not give the capability to modify file contents. Instead, we can use "},{type:b,tag:c,props:{},children:[{type:a,value:v}]},{type:a,value:", a small editor in the terminal. "},{type:b,tag:c,props:{},children:[{type:a,value:v}]},{type:a,value:" is one of the easiest terminal-based editors to use. Here is a mini cheatsheet and demo."}]},{type:a,value:d},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:c,props:{},children:[{type:a,value:"# Usage:\nnano \u003Cfilename\u003E\n\ne.g.\n$ nano hello_world\n\n# Inside nano\n+-------------+--------------------------------------------+\n| Function    | How to                                     |\n+-------------+--------------------------------------------|\n| Navigation  | Arrow Keys (Up, Down, Left, Right)         |\n| Edit Text   | Type your text directly                    |\n| Select Text | Shift + Arrow Keys (Up, Down, Left, Right) |\n| Copy        | (after selection) Alt + ^ [Shift+6]        |\n| Paste       | Ctrl + U                                   |\n| Paste*      | Ctrl + Shift + V                           |\n| Undo        | Alt + U                                    |\n| Redo        | Alt + E                                    |\n| Exit        | Ctrl + X                                   |\n+-------------+--------------------------------------------+\n*paste from system clipboard, which is separate from nano's clipboard\n"}]}]}]},{type:a,value:d},{type:b,tag:V,props:{id:"asciicast-2gIRMBTo6ZmWKSr1dhggeU2tj",src:"https:\u002F\u002Fasciinema.org\u002Fa\u002F2gIRMBTo6ZmWKSr1dhggeU2tj.js",async:E},children:[]},{type:a,value:d},{type:b,tag:o,props:{id:z},children:[{type:b,tag:m,props:{href:"#less",ariaHidden:p,tabIndex:q},children:[{type:b,tag:r,props:{className:[s,t]},children:[]}]},{type:a,value:z}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"Sometimes, a file may be very big, and it would not be a good idea to use "},{type:b,tag:c,props:{},children:[{type:a,value:u}]},{type:a,value:" to print its contents. We don't want the terminal to be flooded with output. Take this "},{type:b,tag:m,props:{href:"https:\u002F\u002Fraw.githubusercontent.com\u002Fdanielmiessler\u002FSecLists\u002Fmaster\u002FPasswords\u002F2020-200_most_used_passwords.txt",rel:["nofollow","noopener","noreferrer"],target:"_blank"},children:[{type:a,value:"password list"}]},{type:a,value:" with 200 lines for example. In this case, we can use the "},{type:b,tag:c,props:{},children:[{type:a,value:z}]},{type:a,value:" command, which allows us to scroll through the contents of a file."}]},{type:a,value:d},{type:b,tag:V,props:{id:"asciicast-OfCE1OgHeKI4yUz8kARgDCB0Y",src:"https:\u002F\u002Fasciinema.org\u002Fa\u002FOfCE1OgHeKI4yUz8kARgDCB0Y.js",async:E},children:[]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"As shown the demo above, we can scroll through the file with the mouse (if the terminal is configured to support this), or with the arrow keys. To exit, enter "},{type:b,tag:c,props:{},children:[{type:a,value:"q"}]},{type:a,value:y}]},{type:a,value:d},{type:b,tag:o,props:{id:L},children:[{type:b,tag:m,props:{href:"#headtail",ariaHidden:p,tabIndex:q},children:[{type:b,tag:r,props:{className:[s,t]},children:[]}]},{type:a,value:M}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"Alternatively, we can use "},{type:b,tag:c,props:{},children:[{type:a,value:W}]},{type:a,value:" to print the first 10 lines of the file, or "},{type:b,tag:c,props:{},children:[{type:a,value:X}]},{type:a,value:" for the last 10 lines."}]},{type:a,value:d},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:c,props:{},children:[{type:a,value:"$ head 2020-200_most_used_passwords.txt\n123456\n123456789\npicture1\npassword\n12345678\n111111\n123123\n12345\n1234567890\nsenha\n"}]}]}]},{type:a,value:d},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:c,props:{},children:[{type:a,value:"$ tail 2020-200_most_used_passwords.txt\nloveme\ngabriel\nalexander\ncheese\npassw0rd\n142536\npeanut\n11223344\nthomas\nangel1\n"}]}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"The number of lines printed can be customised using the "},{type:b,tag:c,props:{},children:[{type:a,value:"-n"}]},{type:a,value:" command-line flag."}]},{type:a,value:d},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:c,props:{},children:[{type:a,value:"$ head -n4 2020-200_most_used_passwords.txt\n123456\n123456789\npicture1\npassword\n"}]}]}]},{type:a,value:d},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:c,props:{},children:[{type:a,value:"$ tail -n4 2020-200_most_used_passwords.txt\npeanut\n11223344\nthomas\nangel1\n"}]}]}]},{type:a,value:d},{type:b,tag:o,props:{id:w},children:[{type:b,tag:m,props:{href:"#grep",ariaHidden:p,tabIndex:q},children:[{type:b,tag:r,props:{className:[s,t]},children:[]}]},{type:a,value:w}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"There is a very handy command "},{type:b,tag:c,props:{},children:[{type:a,value:w}]},{type:a,value:" that filters lines containing a given pattern. The syntax is "},{type:b,tag:c,props:{},children:[{type:a,value:"grep \u003CPATTERN\u003E \u003CFILE\u003E"}]},{type:a,value:y}]},{type:a,value:d},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:c,props:{},children:[{type:a,value:"$ grep password 2020-200_most_used_passwords.txt\npassword\npassword1\npassword123\n"}]}]}]},{type:a,value:d},{type:b,tag:o,props:{id:N},children:[{type:b,tag:m,props:{href:"#pipe",ariaHidden:p,tabIndex:q},children:[{type:b,tag:r,props:{className:[s,t]},children:[]}]},{type:a,value:O}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"Earlier, we introduced the redirection operators ("},{type:b,tag:c,props:{},children:[{type:a,value:x}]},{type:a,value:Y},{type:b,tag:c,props:{},children:[{type:a,value:S}]},{type:a,value:"). The pipe operator ("},{type:b,tag:c,props:{},children:[{type:a,value:"|"}]},{type:a,value:") behaves similarly, but instead of writing the output to a file, it sends the "},{type:b,tag:k,props:{},children:[{type:a,value:R}]},{type:a,value:" of the command on the "},{type:b,tag:k,props:{},children:[{type:a,value:"LHS"}]},{type:a,value:" as "},{type:b,tag:k,props:{},children:[{type:a,value:"input"}]},{type:a,value:" to the command on the "},{type:b,tag:k,props:{},children:[{type:a,value:"RHS"}]},{type:a,value:y}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"The following examples are alternative ways to use "},{type:b,tag:c,props:{},children:[{type:a,value:W}]},{type:a,value:", "},{type:b,tag:c,props:{},children:[{type:a,value:X}]},{type:a,value:Y},{type:b,tag:c,props:{},children:[{type:a,value:w}]},{type:a,value:y}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:k,props:{},children:[{type:a,value:"Print the first 10 lines of "},{type:b,tag:c,props:{},children:[{type:a,value:F}]}]}]},{type:a,value:d},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:c,props:{},children:[{type:a,value:"$ cat 2020-200_most_used_passwords.txt | head\n123456\n123456789\npicture1\npassword\n12345678\n111111\n123123\n12345\n1234567890\nsenha\n"}]}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:k,props:{},children:[{type:a,value:"Print the last 10 lines of "},{type:b,tag:c,props:{},children:[{type:a,value:F}]}]}]},{type:a,value:d},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:c,props:{},children:[{type:a,value:"$ cat 2020-200_most_used_passwords.txt | tail\nloveme\ngabriel\nalexander\ncheese\npassw0rd\n142536\npeanut\n11223344\nthomas\nangel1\n"}]}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:b,tag:k,props:{},children:[{type:a,value:"Print the lines of "},{type:b,tag:c,props:{},children:[{type:a,value:F}]},{type:a,value:" that contain the substring password"}]}]},{type:a,value:d},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:c,props:{},children:[{type:a,value:"$ cat 2020-200_most_used_passwords.txt | grep password\npassword\npassword1\npassword123\n"}]}]}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"There is no difference between using pipes and using the commands directly (e.g. "},{type:b,tag:c,props:{},children:[{type:a,value:"head file"}]},{type:a,value:"). It is just a matter of preference."}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"When you've grasp this concept well you can achieve a lot just by chaining simple commands together with the pipe operator. Here is a command that gets the 6th to 10th passwords that contain "},{type:b,tag:c,props:{},children:[{type:a,value:"123"}]},{type:a,value:":"}]},{type:a,value:d},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:c,props:{},children:[{type:a,value:"$ cat 2020-200_most_used_passwords.txt | grep 123 | head | tail -n5\n1234567890\n1234567\nabc123\n1234\n123\n"}]}]}]},{type:a,value:d},{type:b,tag:o,props:{id:P},children:[{type:b,tag:m,props:{href:"#mini-quiz",ariaHidden:p,tabIndex:q},children:[{type:b,tag:r,props:{className:[s,t]},children:[]}]},{type:a,value:Q}]},{type:a,value:d},{type:b,tag:e,props:{},children:[{type:a,value:"The quiz questions depend on the command line below.\nProvide the appropriate command that goes into "},{type:b,tag:c,props:{},children:[{type:a,value:Z}]},{type:a,value:" to obtain the requested output."}]},{type:a,value:d},{type:b,tag:f,props:{className:[g]},children:[{type:b,tag:h,props:{className:[i,j]},children:[{type:b,tag:c,props:{},children:[{type:a,value:"$ cat passwords.txt | ...\n"}]}]}]},{type:a,value:d},{type:b,tag:T,props:{},children:[{type:a,value:A},{type:b,tag:G,props:{answer:"head -n7"},children:[{type:a,value:"\n        Get the first 7 lines of "},{type:b,tag:c,props:{},children:[{type:a,value:H}]},{type:a,value:I}]},{type:a,value:A},{type:b,tag:G,props:{answer:"tail -n23"},children:[{type:a,value:"\n        Get the last 23 lines of "},{type:b,tag:c,props:{},children:[{type:a,value:H}]},{type:a,value:I}]},{type:a,value:A},{type:b,tag:G,props:{answer:"grep abc"},children:[{type:a,value:"\n        Get the lines in "},{type:b,tag:c,props:{},children:[{type:a,value:H}]},{type:a,value:" that contain the string "},{type:b,tag:c,props:{},children:[{type:a,value:"abc"}]},{type:a,value:I}]},{type:a,value:A},{type:b,tag:U,props:{answer:"3",":options":"[\n            'The first 50 lines, followed by the lines that contains the string \u003Ccode\u003Epass\u003C\u002Fcode\u003E, followed by the last 11 lines of \u003Ccode\u003Epassword.txt\u003C\u002Fcode\u003E.',\n            'The first 50 lines and last 11 lines of \u003Ccode\u003Epassword.txt\u003C\u002Fcode\u003E if they contain the string \u003Ccode\u003Epass\u003C\u002Fcode\u003E.',\n            'Out of the first 50 lines in \u003Ccode\u003Epassword.txt\u003C\u002Fcode\u003E, the last 11 lines that contains the string \u003Ccode\u003Epass\u003C\u002Fcode\u003E.',\n            'Empty output.'\n        ]"},children:[{type:a,value:"\n        Suppose the "},{type:b,tag:c,props:{},children:[{type:a,value:Z}]},{type:a,value:" is replaced with\n        "},{type:b,tag:_,props:{},children:[]},{type:a,value:"\n        "},{type:b,tag:c,props:{},children:[{type:a,value:"head -n50 | grep pass | tail -n11"}]},{type:a,value:".\n        "},{type:b,tag:_,props:{},children:[]},{type:a,value:"\n        What is the expected output?\n    "}]},{type:a,value:d}]}]},dir:$,path:"\u002Flessons\u002Flinux-basics\u002Ffile-manipulation",extension:".md",createdAt:"2021-08-29T08:54:08.937Z",updatedAt:"2021-09-26T11:03:59.308Z"},module:{slug:"linux-basics",title:B,desc:"Learn the basics of operating a Linux-based operating system (OS) and take your first steps in exploitation in a Linux environment!",diff:"Easy",order:1,toc:[],dir:"\u002Flessons",path:$},prev:{slug:"directory-traversal",module:B,title:"Directory Traversal",desc:"Moving around the filesystem"},next:{slug:"variables",module:B,title:"Environment Variables",desc:"For configuration and more \u003E:)"},isLesson:E,title:"File Manipulation | Linux Basics",challenges:[]}],fetch:{},mutations:void 0}}("text","element","code","\n","p","div","nuxt-content-highlight","pre","language-text","line-numbers","strong","echo","a",2,"h2","true",-1,"span","icon","icon-link","cat","nano","grep","\u003E",".","less","\n    ","Linux Basics","Hello World!","hello_world",true,"2020-200_most_used_passwords.txt","text-quiz","passwords.txt",".\n    ","-vs-","\u003E vs \u003E\u003E","headtail","head\u002Ftail","pipe","Pipe","mini-quiz","Mini-Quiz","output","\u003E\u003E","quiz","option-quiz","script","head","tail"," and ","...","br","\u002Flessons\u002Flinux-basics")));